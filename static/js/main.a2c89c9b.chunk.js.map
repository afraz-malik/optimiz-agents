{"version":3,"sources":["components/RoleList/RoleList.module.scss","components/Database/Database.module.scss","components/ClientForm/ClientForm.module.scss","components/UserForm/UserForm.module.scss","components/Navbar/Navbar.module.scss","components/EditBox/EditBox.module.scss","components/AddBox/AddBox.module.scss","components/Footer/Footer.module.scss","components/RoleList/RoleListEdit.module.scss","components/Navbar/Navbar.jsx","components/ClientForm/ClientForm.jsx","redux/clients/clients.actions.js","components/UserForm/UserForm.jsx","redux/users/users.actions.js","components/AddBox/AddBox.jsx","components/EditBox/EditBox.jsx","components/Database/TableGen.jsx","components/Database/Database.jsx","components/Footer/Footer.jsx","pages/ClientWhite/ClientWhite.jsx","pages/UserManagement/UserManagement.jsx","components/RoleList/RoleListEdit.jsx","redux/roles/roles.actions.js","components/RoleList/RoleListGen.jsx","components/RoleList/RoleList.jsx","components/AddRole/AddRole.jsx","pages/Roles/Roles.jsx","App.js","redux/users/users.stateHandlers.js","redux/users/users.reducers.js","redux/clients/clients.stateHandlers.js","redux/clients/clients.reducers.js","redux/roles/roles.stateHandlers.js","redux/roles/roles.reducers.js","redux/root-reducer.js","redux/store.js","serviceWorker.js","index.js","components/AddRole/AddRole.module.scss"],"names":["module","exports","Navbar","useState","search","notification","profile","nav","setNav","toggleNav","value","document","getElementById","style","display","focus","console","log","className","NavbarCss","navbar","leftnav","rightnav","alt","src","onClick","type","id","onBlur","notificationimg","dot","notificationBoxmodel","anime","ClientForm","showForm","dispatch","useDispatch","fname","lname","email","company","phone","userRoles","password","client","setClient","handleChange","event","target","name","ClientFormCss","form","onSubmit","preventDefault","payload","toast","success","row","col","htmlFor","onChange","roles","disabled","defaultValue","selected","autoComplete","buttons","addbtn","cancel","UserForm","UserFormCss","AddBox","title","setform","AddBoxCss","container","add","text","button","EditBox","toggleEditBox","data","index","newData","setNewData","EditBoxCss","outerbox","box","head","body","newClient","EditUserAction","newUser","NumberGen","counter","DatabaseCss","numbers","TableGen","editBox","setEditBox","actions","window","confirm","manageDelete","Database","searchField","setSearchField","filteredData","filter","toLowerCase","includes","database","top","gear","action","placeholder","export","table","map","j","pages","back","Array","i","front","Footer","FooterCss","footer","left","right","connect","state","clientReducer","clients","minHeight","userReducer","users","RoleListEdit","role","roleName","manageAccounts","manageAccountsUser","accountManager","createUsers","deleteUsers","performance","analytics","compaigns","publishers","toggle","setToggle","admin","page","publisher","setBox","handleBox","handleToggle","checked","RoleListEditCss","newRole","boxmodel","boxmodel_top","transform","boxmodel_body","switchBox","Switch","inputProps","RoleListCss","RoleListGen","tags","roleReducer","toggleState","AddRole","AddRoleCss","required","UserManagement","setState","App","basename","process","to","exact","path","component","ClientWhite","Roles","editUser","oldUser","User","deleteUser","slice","initialUserState","editClent","oldClient","deleteClient","editRole","oldRoles","deleteRole","initialRoles","rootReducer","combineReducers","Object","assign","newRoles","store","createStore","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2c89c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RoleList_container__1TWz0\",\"add\":\"RoleList_add__CXTXp\",\"text\":\"RoleList_text__ZOIrH\",\"button\":\"RoleList_button__H8-cq\",\"action\":\"RoleList_action__33aN8\",\"filter\":\"RoleList_filter__uJGs_\",\"export\":\"RoleList_export__2wB9k\",\"search\":\"RoleList_search__QakCG\",\"table\":\"RoleList_table__325BA\",\"tags\":\"RoleList_tags__2LwGP\",\"actions\":\"RoleList_actions__RpP79\",\"pages\":\"RoleList_pages__1YmGZ\",\"back\":\"RoleList_back__1Tj2p\",\"front\":\"RoleList_front__1EceR\",\"numbers\":\"RoleList_numbers__28E7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"database\":\"Database_database__3jbUv\",\"top\":\"Database_top__1MFWK\",\"text\":\"Database_text__15hdE\",\"action\":\"Database_action__3z_qC\",\"filter\":\"Database_filter__3M6rl\",\"export\":\"Database_export__4BO-j\",\"search\":\"Database_search__faaQ1\",\"table\":\"Database_table__1vWaH\",\"actions\":\"Database_actions__2xiDz\",\"pages\":\"Database_pages__3zCIH\",\"back\":\"Database_back__1vQ1F\",\"front\":\"Database_front__128uM\",\"numbers\":\"Database_numbers__2D3ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ClientForm_form__37LqZ\",\"row\":\"ClientForm_row__1hiEJ\",\"col\":\"ClientForm_col__3spjA\",\"buttons\":\"ClientForm_buttons__1Hxva\",\"addbtn\":\"ClientForm_addbtn__1GF3q\",\"cancel\":\"ClientForm_cancel__3qeAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserForm_form__27nja\",\"row\":\"UserForm_row__316or\",\"col\":\"UserForm_col__1RRfC\",\"buttons\":\"UserForm_buttons__1zlqn\",\"addbtn\":\"UserForm_addbtn__2gCdA\",\"cancel\":\"UserForm_cancel__12S5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__jq-Th\",\"leftnav\":\"Navbar_leftnav__gXXCY\",\"rightnav\":\"Navbar_rightnav__2-pNC\",\"search\":\"Navbar_search__3Q2wJ\",\"notification\":\"Navbar_notification__3AMiM\",\"dot\":\"Navbar_dot__1SfgO\",\"anime\":\"Navbar_anime__2sIu_\",\"notificationBoxmodel\":\"Navbar_notificationBoxmodel__7wraw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerbox\":\"EditBox_outerbox__Xk5gU\",\"box\":\"EditBox_box__EVFg1\",\"head\":\"EditBox_head__2t8g8\",\"body\":\"EditBox_body__3iV7u\",\"buttons\":\"EditBox_buttons__jbCpA\",\"addbtn\":\"EditBox_addbtn__1FAGI\",\"cancel\":\"EditBox_cancel__NE4lN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddBox_container__3X_eD\",\"add\":\"AddBox_add__1jm9N\",\"text\":\"AddBox_text__Lr7LW\",\"button\":\"AddBox_button__2HysL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__13wuQ\",\"left\":\"Footer_left__3FkzN\",\"right\":\"Footer_right__2DNwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerbox\":\"RoleListEdit_outerbox__FfKFu\",\"box\":\"RoleListEdit_box__1i-zn\",\"head\":\"RoleListEdit_head__3jsiU\",\"body\":\"RoleListEdit_body__3B3qS\",\"row\":\"RoleListEdit_row__1SlvT\",\"boxmodel\":\"RoleListEdit_boxmodel__1A7xO\",\"boxmodel_top\":\"RoleListEdit_boxmodel_top__1BN8j\",\"boxmodel_body\":\"RoleListEdit_boxmodel_body__1Ei-5\",\"switchBox\":\"RoleListEdit_switchBox__2mytQ\",\"buttons\":\"RoleListEdit_buttons__3wlhV\",\"addbtn\":\"RoleListEdit_addbtn__1fx2J\",\"cancel\":\"RoleListEdit_cancel__1EWm_\"};","import React, { useState } from 'react'\r\nimport NavbarCss from './Navbar.module.scss'\r\n\r\nconst Navbar = () => {\r\n  const [nav, setNav] = useState({\r\n    search: false,\r\n    notification: false,\r\n    profile: false,\r\n  })\r\n  const toggleNav = (value) => {\r\n    if (value === 'notification') {\r\n      setNav({\r\n        ...nav,\r\n        notification: !nav.notification,\r\n      })\r\n    }\r\n    if (value === 'search') {\r\n      document.getElementById('input').style.display = 'block'\r\n      document.getElementById('input').focus()\r\n      setNav({\r\n        ...nav,\r\n        search: !nav.search,\r\n      })\r\n    }\r\n    if (value === 'closesearch') {\r\n      if (document.getElementById('input').value === '') {\r\n        document.getElementById('input').style.display = 'none'\r\n        console.log()\r\n        setNav({\r\n          ...nav,\r\n          search: !nav.search,\r\n        })\r\n      }\r\n    }\r\n    if (value === 'profile') {\r\n      setNav({\r\n        ...nav,\r\n        profile: !nav.profile,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={NavbarCss.navbar}>\r\n      <div className={NavbarCss.leftnav}>\r\n        <h3>DEFAULT BRAND TEXT</h3>\r\n      </div>\r\n      <div className={NavbarCss.rightnav}>\r\n        <div className={NavbarCss.search}>\r\n          <img\r\n            alt=\"\"\r\n            src=\"images/search.svg \"\r\n            onClick={() => toggleNav('search')}\r\n            style={nav.search ? { display: 'none' } : { display: 'block' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"input\"\r\n            onBlur={() => toggleNav('closesearch')}\r\n          />\r\n        </div>\r\n        <div className={NavbarCss.notification}>\r\n          <img\r\n            className={NavbarCss.notificationimg}\r\n            alt=\"\"\r\n            src=\"images/notification.svg\"\r\n            onClick={() => toggleNav('notification')}\r\n          />\r\n          <img\r\n            className={NavbarCss.dot}\r\n            alt=\"\"\r\n            src=\"images/dot.svg\"\r\n            onClick={() => toggleNav('notification')}\r\n          />\r\n          <div\r\n            className={NavbarCss.notificationBoxmodel}\r\n            style={\r\n              nav.notification ? { display: 'block' } : { display: 'none' }\r\n            }\r\n          >\r\n            <h2>No New Notification</h2>\r\n          </div>\r\n        </div>\r\n        <div className={NavbarCss.anime}>\r\n          <img alt=\"\" src=\"images/anime.png\" />\r\n        </div>\r\n      </div>\r\n      {/* Their Box Models */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\nimport ClientFormCss from './ClientForm.module.scss'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { AddClientAction } from '../../redux/clients/clients.actions'\r\n// Notification\r\nimport toast from 'cogo-toast'\r\n\r\nconst ClientForm = ({ showForm }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [client, setClient] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    email: '',\r\n    company: '',\r\n    phone: '',\r\n    userRoles: '',\r\n    password: '',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setClient({ ...client, [event.target.name]: event.target.value })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    dispatch(AddClientAction(client))\r\n    toast.success('Added Success fully')\r\n    setClient({\r\n      fname: '',\r\n      lname: '',\r\n      email: '',\r\n      company: '',\r\n      phone: '',\r\n      userRoles: '',\r\n      password: '',\r\n    })\r\n  }\r\n  return (\r\n    <form className={ClientFormCss.form} onSubmit={handleSubmit}>\r\n      <div className={ClientFormCss.row}>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"fname\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            value={client.fname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"lname\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lname\"\r\n            value={client.lname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={client.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"company\">Company</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            value={client.company}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"phone\">Phone number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={client.phone}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"roles\">User Roles</label>\r\n          <select name='roles' value={client.roles} onChange={handleChange}>\r\n            <option disabled defaultValue selected  style={{display: 'none'}} > </option>\r\n            <option value='Admin'>Admin</option>\r\n            <option value='User'>User</option>  \r\n            <option value='ThirdPary'>ThirdPary</option>\r\n          </select>\r\n          {/* <input\r\n            type=\"text\"\r\n            name=\"userRoles\"\r\n            autoComplete=\"current-password\"\r\n            value={client.userRoles}\r\n            onChange={handleChange}\r\n          /> */}\r\n        </div>\r\n        <div className={ClientFormCss.col}>\r\n          <label htmlFor=\"password\">Passwords</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={client.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={ClientFormCss.buttons}>\r\n        <button className={ClientFormCss.addbtn} type=\"submit\">\r\n          {' '}\r\n          Add Client\r\n        </button>\r\n        <button\r\n          className={ClientFormCss.cancel}\r\n          type=\"button\"\r\n          onClick={() => showForm()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ClientForm\r\n","export const AddClientAction = (payload) => {\r\n  return {\r\n    type: 'ADD_CLIENT',\r\n    payload: payload,\r\n  }\r\n}\r\nexport const EditClientAction = (payload) => ({\r\n  type: 'EDIT_CLIENT',\r\n  payload: payload,\r\n})\r\nexport const DeleteClientAction = (payload) => ({\r\n  type: 'DELETE_CLIENT',\r\n  payload: payload,\r\n})\r\n","import React, { useState } from 'react'\r\nimport UserFormCss from './UserForm.module.scss'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { AddUserAction } from '../../redux/users/users.actions'\r\n// Notification\r\nimport toast from 'cogo-toast'\r\n\r\nconst UserForm = ({ showForm }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [client, setClient] = useState({\r\n    fname: '',\r\n    lname: '',\r\n    email: '',\r\n    company: '',\r\n    phone: '',\r\n    roles: '',\r\n    password: '',\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setClient({ ...client, [event.target.name]: event.target.value })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    dispatch(AddUserAction(client))\r\n    toast.success('Added Success fully')\r\n    setClient({\r\n      fname: '',\r\n      lname: '',\r\n      email: '',\r\n      company: '',\r\n      phone: '',\r\n      roles: '',\r\n      password: '',\r\n    })\r\n  }\r\n  return (\r\n    <form className={UserFormCss.form} onSubmit={handleSubmit}>\r\n      <div className={UserFormCss.row}>\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"fname\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"fname\"\r\n            value={client.fname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"lname\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lname\"\r\n            value={client.lname}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={client.email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {/* <div className={UserFormCss.col}>\r\n          <label htmlFor=\"company\">Company</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            value={client.company}\r\n            onChange={handleChange}\r\n          />\r\n        </div> */}\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"phone\">Phone number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={client.phone}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"password\">Passwords</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={client.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={UserFormCss.col}>\r\n          <label htmlFor=\"roles\">User Roles</label>\r\n          <select name='roles' value={client.roles} onChange={handleChange}>\r\n            <option disabled defaultValue selected  style={{display: 'none'}} > </option>\r\n            <option value='Admin'>Admin</option>\r\n            <option value='User'>User</option>  \r\n            <option value='ThirdPary'>ThirdPary</option>\r\n          </select>\r\n          {/* <input\r\n            type=\"text\"\r\n            name=\"roles\"\r\n            autoComplete=\"off\"\r\n            value={client.roles}\r\n            onChange={handleChange}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n      <div className={UserFormCss.buttons}>\r\n        <button className={UserFormCss.addbtn} type=\"submit\">\r\n          {' '}\r\n          Add client\r\n        </button>\r\n        <button\r\n          className={UserFormCss.cancel}\r\n          type=\"button\"\r\n          onClick={() => showForm()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UserForm\r\n","export const AddUserAction = (payload) => {\r\n  return {\r\n    type: 'ADD_USER',\r\n    payload: payload,\r\n  }\r\n}\r\nexport const EditUserAction = (payload) => ({\r\n  type: 'EDIT_USER',\r\n  payload: payload,\r\n})\r\nexport const DeleteUserAction = (payload) => ({\r\n  type: 'DELETE_USER',\r\n  payload: payload,\r\n})\r\n","import React, { useState } from 'react'\r\nimport AddBoxCss from './AddBox.module.scss'\r\n\r\n// Components\r\nimport ClientForm from '../ClientForm/ClientForm'\r\nimport UserForm from '../UserForm/UserForm'\r\n\r\nconst AddBox = ({ title }) => {\r\n  const [form, setform] = useState(false)\r\n  const showForm = () => {\r\n    setform(!form)\r\n  }\r\n  return (\r\n    <div className={AddBoxCss.container}>\r\n      <div className={AddBoxCss.add}>\r\n        <div className={AddBoxCss.text}>\r\n          <h2>Add New {title}</h2>\r\n        </div>\r\n        <div\r\n          className={AddBoxCss.button}\r\n          style={form ? { display: 'none' } : { display: 'block' }}\r\n        >\r\n          <button onClick={() => showForm()}>Add {title}</button>\r\n        </div>\r\n      </div>\r\n      <div style={form ? { display: 'block' } : { display: 'none' }}>\r\n        {title === 'Client' ? (\r\n          <ClientForm showForm={showForm} />\r\n        ) : (\r\n          <UserForm showForm={showForm} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddBox\r\n","import React, { useState } from 'react'\r\nimport EditBoxCss from './EditBox.module.scss'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { EditClientAction } from '../../redux/clients/clients.actions'\r\nimport { EditUserAction } from '../../redux/users/users.actions'\r\n\r\nconst EditBox = ({ toggleEditBox, data, index, title }) => {\r\n  const dispatch = useDispatch()\r\n  const [newData, setNewData] = useState(data)\r\n  const handleChange = (event) => {\r\n    setNewData({ ...newData, [event.target.name]: event.target.value })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    title === 'Client'\r\n      ? dispatch(EditClientAction({ newClient: newData, index }))\r\n      : dispatch(EditUserAction({ newUser: newData, index }))\r\n    toggleEditBox()\r\n  }\r\n  return (\r\n    <div className={EditBoxCss.outerbox}>\r\n      <div className={EditBoxCss.box}>\r\n        <div className={EditBoxCss.head}>\r\n          <h2>Edit {title} details</h2>\r\n        </div>\r\n        <div className={EditBoxCss.body}>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              onChange={handleChange}\r\n              value={newData.fname}\r\n            />\r\n\r\n            <label>Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lname\"\r\n              onChange={handleChange}\r\n              value={newData.lname}\r\n            />\r\n\r\n            <label>Company</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"company\"\r\n              onChange={handleChange}\r\n              value={newData.company}\r\n            />\r\n\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={newData.email}\r\n            />\r\n\r\n            <label>User Role</label>\r\n            <select name='roles' value={newData.roles} onChange={handleChange}>\r\n              <option disabled defaultValue selected  style={{display: 'none'}} > </option>\r\n              <option value='Admin'>Admin</option>\r\n              <option value='User'>User</option>  \r\n              <option value='ThirdPary'>ThirdPary</option>\r\n            </select>\r\n            {/* <input\r\n              type=\"text\"\r\n              name=\"roles\"\r\n              onChange={handleChange}\r\n              value={newData.roles}\r\n            /> */}\r\n            <div className={EditBoxCss.buttons}>\r\n              <button className={EditBoxCss.addbtn} type=\"submit\">\r\n                {' '}\r\n                Update\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={EditBoxCss.cancel}\r\n                onClick={() => toggleEditBox()}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditBox\r\n","import React, { useState } from 'react'\r\nimport DatabaseCss from './Database.module.scss'\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { DeleteClientAction } from '../../redux/clients/clients.actions'\r\nimport { DeleteUserAction } from '../../redux/users/users.actions'\r\n// Components\r\nimport EditBox from '../EditBox/EditBox'\r\n\r\nconst TableGen = ({ data, title, index }) => {\r\n  const dispatch = useDispatch()\r\n  const [editBox, setEditBox] = useState(false)\r\n  const toggleEditBox = () => {\r\n    setEditBox(!editBox)\r\n  }\r\n  const manageDelete = () => {\r\n    const result = window.confirm('Are you sure you want to delete?')\r\n    if (result) {\r\n      title === 'Client'\r\n        ? dispatch(DeleteClientAction(index))\r\n        : dispatch(DeleteUserAction(index))\r\n    }\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>\r\n        {data.fname} {data.lname}\r\n      </td>\r\n      <td>{data.company}</td>\r\n      <td>{data.phone}</td>\r\n      <td>{data.email}</td>\r\n      <td>\r\n        <div className={DatabaseCss.actions}>\r\n          <img alt=\"\" src=\"images/edit.svg\" onClick={() => toggleEditBox()} />\r\n          <img alt=\"\" src=\"images/delete.svg\" onClick={() => manageDelete()} />\r\n          {editBox ? (\r\n            <EditBox\r\n              toggleEditBox={toggleEditBox}\r\n              data={data}\r\n              index={index}\r\n              title={title}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\nexport const NumberGen = ({ counter }) => {\r\n  return <div className={DatabaseCss.numbers}>{counter}</div>\r\n}\r\nexport default TableGen\r\n","import React, { useState } from 'react'\r\nimport DatabaseCss from './Database.module.scss'\r\n\r\n// Components\r\nimport TableGen, { NumberGen } from './TableGen'\r\n\r\nconst Database = ({ data, title }) => {\r\n  const [searchField, setSearchField] = useState({ value: '' })\r\n  const handleChange = (event) => {\r\n    setSearchField({ ...searchField, value: event.target.value })\r\n  }\r\n\r\n  const filteredData = data.filter((data) => {\r\n    return (\r\n      data.fname.toLowerCase().includes(searchField.value.toLowerCase()) ||\r\n      data.lname.toLowerCase().includes(searchField.value.toLowerCase()) ||\r\n      // data.company.toLowerCase().includes(searchField.value.toLowerCase()) ||\r\n      data.email.toLowerCase().includes(searchField.value.toLowerCase())\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className={DatabaseCss.database}>\r\n      <div className={DatabaseCss.top}>\r\n        <div className={DatabaseCss.text}>\r\n          <h3>List of {title}s</h3>\r\n        </div>\r\n        <div className={DatabaseCss.gear}>\r\n          <img alt=\"\" src=\"images/gear.svg\" />\r\n        </div>\r\n      </div>\r\n      <div className={DatabaseCss.action}>\r\n        <div className={DatabaseCss.search}>\r\n          <img alt=\"\" src=\"images/search2.svg\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for usernames, company...\"\r\n            onChange={handleChange}\r\n            value={searchField.value}\r\n          />\r\n        </div>\r\n        <div className={DatabaseCss.filter}>\r\n          <img alt=\"\" src=\"images/filter.svg\" />\r\n          <h5>Filter</h5>\r\n        </div>\r\n        <div className={DatabaseCss.export}>\r\n          <img alt=\"\" src=\"images/export.svg\" />\r\n          <h5>Export</h5>\r\n        </div>\r\n      </div>\r\n      <div className={DatabaseCss.table}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>NAME</th>\r\n              <th>COMPANY</th>\r\n              <th>PHONE NUMBER</th>\r\n              <th>EMAIL</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredData.map((data, j) => (\r\n              <TableGen key={j} title={title} index={j} data={data} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n        <div className={DatabaseCss.pages}>\r\n          <div className={DatabaseCss.back}>&lt;</div>\r\n          {[...Array(3)].map((i, j) => (\r\n            <NumberGen key={j} counter={j + 1} />\r\n          ))}\r\n          <div className={DatabaseCss.front}>&gt;</div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Database\r\n","import React from 'react'\r\nimport FooterCss from './Footer.module.scss'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={FooterCss.footer}>\r\n      <div className={FooterCss.left}>\r\n        <ul>\r\n          <li>CREATEIVE TIM</li>\r\n          <li>ABOUT US</li>\r\n          <li>BLOG</li>\r\n        </ul>\r\n      </div>\r\n      <div className={FooterCss.right}>\r\n        © 2018 made with by <span>Creative Tim </span>for a better web.\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n// components\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport AddBox from '../../components/AddBox/AddBox'\r\nimport Database from '../../components/Database/Database'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.clientReducer.clients,\r\n})\r\n\r\nconst ClientWhite = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Navbar />\r\n        <AddBox title=\"Client\" />\r\n        <Database data={data} title=\"Client\" />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(ClientWhite)\r\n","import React from 'react'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n// components\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport AddBox from '../../components/AddBox/AddBox'\r\nimport Database from '../../components/Database/Database'\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.userReducer.users,\r\n})\r\n\r\nconst UserManagement = ({ data }) => {\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Navbar />\r\n        <AddBox title=\"User\" />\r\n        <Database data={data} title=\"User\" />\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserManagement)\r\n","import React, { useState } from 'react'\r\nimport RoleListEditCss from './RoleListEdit.module.scss'\r\nimport Switch from '@material-ui/core/Switch'\r\n\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { EditRoleAction } from '../../redux/roles/roles.actions'\r\n\r\nconst RoleListEdit = ({ toggleEditBox, role, data, index }) => {\r\n  const { roleName, roles } = role\r\n  const dispatch = useDispatch()\r\n  const [newData, setNewData] = useState(data)\r\n  const [toggle, setToggle] = useState({\r\n    manageAccounts: roles.manageAccounts,\r\n    manageAccountsUser: roles.manageAccountsUser,\r\n    accountManager: roles.accountManager,\r\n    createUsers: roles.createUsers,\r\n    deleteUsers: roles.deleteUsers,\r\n    performance: roles.performance,\r\n    analytics: roles.analytics,\r\n    compaigns: roles.compaigns,\r\n    clients: roles.clients,\r\n    publishers: roles.publishers,\r\n  })\r\n  const [box, setBox] = useState({\r\n    admin: false,\r\n    page: false,\r\n    client: false,\r\n    publisher: false,\r\n  })\r\n  const handleBox = (value) => {\r\n    if (value === 'admin') setBox({ ...box, admin: !box.admin })\r\n    if (value === 'page') setBox({ ...box, page: !box.page })\r\n    if (value === 'client') setBox({ ...box, client: !box.client })\r\n    if (value === 'publisher') setBox({ ...box, publisher: !box.publisher })\r\n  }\r\n  const handleChange = (event) => {\r\n    setNewData({ ...newData, [event.target.name]: event.target.value })\r\n  }\r\n  const handleToggle = (event) => {\r\n    setToggle({ ...toggle, [event.target.name]: event.target.checked })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newRole = {\r\n      roleName,\r\n      roles: toggle,\r\n    }\r\n    dispatch(EditRoleAction({ newRole, index }))\r\n    toggleEditBox()\r\n  }\r\n  return (\r\n    <div className={RoleListEditCss.outerbox}>\r\n      <div className={RoleListEditCss.box}>\r\n        <div className={RoleListEditCss.head}>\r\n          <h2>Edit Roles</h2>\r\n        </div>\r\n        <div className={RoleListEditCss.body}>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>Role Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"roleName\"\r\n              onChange={handleChange}\r\n              value={roleName}\r\n            />\r\n            <div className={RoleListEditCss.row}>\r\n              <div className={RoleListEditCss.boxmodel}>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_top}\r\n                  onClick={() => handleBox('admin')}\r\n                >\r\n                  <h3>Admin Specific</h3>\r\n                  <img\r\n                    alt=\"\"\r\n                    src=\"images/up.svg\"\r\n                    style={box.admin ? { transform: 'rotate(-180deg)' } : null}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_body}\r\n                  style={box.admin ? { display: 'block' } : { display: 'none' }}\r\n                >\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Manage Accounts</h5>\r\n                    <Switch\r\n                      //   style={{ color: '#E14ECA' }}\r\n                      checked={toggle.manageAccounts}\r\n                      onChange={handleToggle}\r\n                      name=\"manageAccounts\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Manage Account Users</h5>\r\n                    <Switch\r\n                      checked={toggle.manageAccountsUser}\r\n                      onChange={handleToggle}\r\n                      name=\"manageAccountsUser\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Account Manager</h5>\r\n                    <Switch\r\n                      checked={toggle.accountManager}\r\n                      onChange={handleToggle}\r\n                      name=\"accountManager\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Create Users</h5>\r\n                    <Switch\r\n                      checked={toggle.createUsers}\r\n                      onChange={handleToggle}\r\n                      name=\"createUsers\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Delete Users</h5>\r\n                    <Switch\r\n                      checked={toggle.deleteUsers}\r\n                      onChange={handleToggle}\r\n                      name=\"deleteUsers\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={RoleListEditCss.boxmodel}>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_top}\r\n                  onClick={() => handleBox('page')}\r\n                >\r\n                  <h3>Page Specific</h3>\r\n                  <img\r\n                    alt=\"\"\r\n                    src=\"images/up.svg\"\r\n                    style={box.page ? { transform: 'rotate(-180deg)' } : null}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_body}\r\n                  style={box.page ? { display: 'block' } : { display: 'none' }}\r\n                >\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Performance</h5>\r\n                    <Switch\r\n                      //   style={{ color: '#E14ECA' }}\r\n                      checked={toggle.performance}\r\n                      onChange={handleToggle}\r\n                      name=\"performance\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Analytics</h5>\r\n                    <Switch\r\n                      checked={toggle.analytics}\r\n                      onChange={handleToggle}\r\n                      name=\"analytics\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Compaigns</h5>\r\n                    <Switch\r\n                      checked={toggle.compaigns}\r\n                      onChange={handleToggle}\r\n                      name=\"compaigns\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Clients</h5>\r\n                    <Switch\r\n                      checked={toggle.clients}\r\n                      onChange={handleToggle}\r\n                      name=\"clients\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                  <div className={RoleListEditCss.switchBox}>\r\n                    <h5>Publishers</h5>\r\n                    <Switch\r\n                      checked={toggle.publishers}\r\n                      onChange={handleToggle}\r\n                      name=\"publishers\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={RoleListEditCss.boxmodel}>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_top}\r\n                  onClick={() => handleBox('client')}\r\n                >\r\n                  <h3>Client Specific</h3>\r\n                  <img\r\n                    alt=\"\"\r\n                    src=\"images/up.svg\"\r\n                    style={box.client ? { transform: 'rotate(-180deg)' } : null}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={RoleListEditCss.boxmodel}>\r\n                <div\r\n                  className={RoleListEditCss.boxmodel_top}\r\n                  onClick={() => handleBox('publisher')}\r\n                >\r\n                  <h3>Publishers</h3>\r\n                  <img\r\n                    alt=\"\"\r\n                    src=\"images/up.svg\"\r\n                    style={\r\n                      box.publisher ? { transform: 'rotate(-180deg)' } : null\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={RoleListEditCss.buttons}>\r\n              <button className={RoleListEditCss.addbtn} type=\"submit\">\r\n                {' '}\r\n                Update\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={RoleListEditCss.cancel}\r\n                onClick={() => toggleEditBox()}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoleListEdit\r\n","export const AddRoleAction = (payload) => ({\r\n  type: 'ADD_ROLE',\r\n  payload,\r\n})\r\nexport const DeleteRoleAction = (payload) => ({\r\n  type: 'DELETE_ROLE',\r\n  payload,\r\n})\r\nexport const EditRoleAction = (payload) => ({\r\n  type: 'EDIT_ROLE',\r\n  payload,\r\n})\r\n","import React, { useState } from 'react'\r\nimport RoleListCss from './RoleList.module.scss'\r\n// Redux\r\nimport { useDispatch } from 'react-redux'\r\nimport { DeleteRoleAction } from '../../redux/roles/roles.actions'\r\n// Components\r\nimport RoleListEdit from './RoleListEdit'\r\n\r\nconst RoleListGen = ({ role, index }) => {\r\n  const { roleName, roles } = role\r\n  const dispatch = useDispatch()\r\n  const [editBox, setEditBox] = useState(false)\r\n  const toggleEditBox = () => {\r\n    setEditBox(!editBox)\r\n  }\r\n  const manageDelete = () => {\r\n    const result = window.confirm('Are you sure you want to delete?')\r\n    if (result) {\r\n      dispatch(DeleteRoleAction(index))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{index + 1}</td>\r\n      <td>{roleName}</td>\r\n      <td>\r\n        <div className={RoleListCss.tags}>\r\n          {roles.manageAccounts === true ? <span> Manage Acounts </span> : null}\r\n          {roles.manageAccountsUser === true ? (\r\n            <span> Manage Accounts Users </span>\r\n          ) : null}\r\n          {roles.accountManager === true ? (\r\n            <span> Account Manager </span>\r\n          ) : null}\r\n          {roles.createUsers === true ? <span> Create Users </span> : null}\r\n          {roles.deleteUsers === true ? <span> Delete Users </span> : null}\r\n          {roles.performance === true ? <span> Performance </span> : null}\r\n          {roles.analytics === true ? <span> Analytics</span> : null}\r\n          {roles.compaigns === true ? <span> Compaigns </span> : null}\r\n          {roles.clients === true ? <span> Clients</span> : null}\r\n          {roles.publishers === true ? <span> Publishers</span> : null}\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div className={RoleListCss.actions}>\r\n          <img alt=\"\" src=\"images/edit.svg\" onClick={() => toggleEditBox()} />\r\n          <img alt=\"\" src=\"images/delete.svg\" onClick={() => manageDelete()} />\r\n          {editBox ? (\r\n            <RoleListEdit\r\n              toggleEditBox={toggleEditBox}\r\n              role={role}\r\n              index={index}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\nexport const NumberGen = ({ counter }) => {\r\n  return <div className={RoleListCss.numbers}>{counter}</div>\r\n}\r\nexport default RoleListGen\r\n","import React, { useState } from 'react'\r\nimport RoleListCss from './RoleList.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport RoleListGen from './RoleListGen'\r\nimport { NumberGen } from './RoleListGen'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.roleReducer.roles,\r\n})\r\nconst RoleList = ({ toggleState, roles }) => {\r\n  const [searchField, setSearchField] = useState({ value: '' })\r\n  const handleChange = (event) => {\r\n    setSearchField({ ...searchField, value: event.target.value })\r\n  }\r\n  return (\r\n    <div className={RoleListCss.container}>\r\n      <div className={RoleListCss.add}>\r\n        <div className={RoleListCss.text}>\r\n          <h2>Role List </h2>\r\n        </div>\r\n        <div className={RoleListCss.button}>\r\n          <button onClick={() => toggleState()}>Add Role </button>\r\n        </div>\r\n      </div>\r\n      <div className={RoleListCss.action}>\r\n        <div className={RoleListCss.search}>\r\n          <img alt=\"\" src=\"images/search2.svg\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for usernames, company...\"\r\n            onChange={handleChange}\r\n            value={searchField.value}\r\n          />\r\n        </div>\r\n        <div className={RoleListCss.filter}>\r\n          <img alt=\"\" src=\"images/filter.svg\" />\r\n          <h5>Filter</h5>\r\n        </div>\r\n        <div className={RoleListCss.export}>\r\n          <img alt=\"\" src=\"images/export.svg\" />\r\n          <h5>Export</h5>\r\n        </div>\r\n      </div>\r\n      <div className={RoleListCss.table}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID #</th>\r\n              <th>Named Role</th>\r\n              <th>Permission</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {roles.map((role, j) => (\r\n              <RoleListGen key={j} index={j} role={role} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className={RoleListCss.pages}>\r\n        <div className={RoleListCss.back}>&lt;</div>\r\n        {[...Array(3)].map((i, j) => (\r\n          <NumberGen key={j} counter={j + 1} />\r\n        ))}\r\n        <div className={RoleListCss.front}>&gt;</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default connect(mapStateToProps)(RoleList)\r\n","import React, { useState } from 'react'\r\nimport AddRoleCss from './AddRole.module.scss'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport { AddRoleAction } from '../../redux/roles/roles.actions'\r\nimport { useDispatch } from 'react-redux'\r\nconst AddRole = ({ toggleState }) => {\r\n  const dispatch = useDispatch()\r\n  const [toggle, setToggle] = useState({\r\n    manageAccounts: false,\r\n    manageAccountsUser: false,\r\n    accountManager: false,\r\n    createUsers: false,\r\n    deleteUsers: false,\r\n    performance: false,\r\n    analytics: false,\r\n    compaigns: false,\r\n    clients: false,\r\n    publishers: false,\r\n  })\r\n  const [box, setBox] = useState({\r\n    admin: false,\r\n    page: false,\r\n    client: false,\r\n    publisher: false,\r\n  })\r\n  const handleBox = (value) => {\r\n    if (value === 'admin') setBox({ ...box, admin: !box.admin })\r\n    if (value === 'page') setBox({ ...box, page: !box.page })\r\n    if (value === 'client') setBox({ ...box, client: !box.client })\r\n    if (value === 'publisher') setBox({ ...box, publisher: !box.publisher })\r\n  }\r\n  const handleToggle = (event) => {\r\n    setToggle({ ...toggle, [event.target.name]: event.target.checked })\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const roleName = document.getElementById('roleName').value\r\n    dispatch(AddRoleAction({ roleName, roles: toggle }))\r\n    toggleState()\r\n  }\r\n\r\n  return (\r\n    <div className={AddRoleCss.container}>\r\n      <div className={AddRoleCss.text}>\r\n        <h2>Add New Role</h2>\r\n      </div>\r\n      <form className={AddRoleCss.form} onSubmit={handleSubmit}>\r\n        <div className={AddRoleCss.row}>\r\n          <label htmlFor=\"fname\">First Name</label>\r\n          <input type=\"text\" name=\"roleName\" id=\"roleName\" required />\r\n        </div>\r\n        <div className={AddRoleCss.row}>\r\n          <div className={AddRoleCss.boxmodel}>\r\n            <div\r\n              className={AddRoleCss.boxmodel_top}\r\n              onClick={() => handleBox('admin')}\r\n            >\r\n              <h3>Admin Specific</h3>\r\n              <img\r\n                alt=\"\"\r\n                src=\"images/up.svg\"\r\n                style={box.admin ? { transform: 'rotate(-180deg)' } : null}\r\n              />\r\n            </div>\r\n            <div\r\n              className={AddRoleCss.boxmodel_body}\r\n              style={box.admin ? { display: 'block' } : { display: 'none' }}\r\n            >\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Manage Accounts</h5>\r\n                <Switch\r\n                  //   style={{ color: '#E14ECA' }}\r\n                  checked={toggle.manageAccounts}\r\n                  onChange={handleToggle}\r\n                  name=\"manageAccounts\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Manage Account Users</h5>\r\n                <Switch\r\n                  checked={toggle.manageAccountsUser}\r\n                  onChange={handleToggle}\r\n                  name=\"manageAccountsUser\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Account Manager</h5>\r\n                <Switch\r\n                  checked={toggle.accountManager}\r\n                  onChange={handleToggle}\r\n                  name=\"accountManager\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Create Users</h5>\r\n                <Switch\r\n                  checked={toggle.createUsers}\r\n                  onChange={handleToggle}\r\n                  name=\"createUsers\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Delete Users</h5>\r\n                <Switch\r\n                  checked={toggle.deleteUsers}\r\n                  onChange={handleToggle}\r\n                  name=\"deleteUsers\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={AddRoleCss.boxmodel}>\r\n            <div\r\n              className={AddRoleCss.boxmodel_top}\r\n              onClick={() => handleBox('page')}\r\n            >\r\n              <h3>Page Specific</h3>\r\n              <img\r\n                alt=\"\"\r\n                src=\"images/up.svg\"\r\n                style={box.page ? { transform: 'rotate(-180deg)' } : null}\r\n              />\r\n            </div>\r\n            <div\r\n              className={AddRoleCss.boxmodel_body}\r\n              style={box.page ? { display: 'block' } : { display: 'none' }}\r\n            >\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Performance</h5>\r\n                <Switch\r\n                  //   style={{ color: '#E14ECA' }}\r\n                  checked={toggle.performance}\r\n                  onChange={handleToggle}\r\n                  name=\"performance\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Analytics</h5>\r\n                <Switch\r\n                  checked={toggle.analytics}\r\n                  onChange={handleToggle}\r\n                  name=\"analytics\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Cmpaigns</h5>\r\n                <Switch\r\n                  checked={toggle.compaigns}\r\n                  onChange={handleToggle}\r\n                  name=\"compaigns\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Clients</h5>\r\n                <Switch\r\n                  checked={toggle.clients}\r\n                  onChange={handleToggle}\r\n                  name=\"clients\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n              <div className={AddRoleCss.switchBox}>\r\n                <h5>Publishers</h5>\r\n                <Switch\r\n                  checked={toggle.publishers}\r\n                  onChange={handleToggle}\r\n                  name=\"publishers\"\r\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={AddRoleCss.boxmodel}>\r\n            <div\r\n              className={AddRoleCss.boxmodel_top}\r\n              onClick={() => handleBox('client')}\r\n            >\r\n              <h3>Client Specific</h3>\r\n              <img\r\n                alt=\"\"\r\n                src=\"images/up.svg\"\r\n                style={box.client ? { transform: 'rotate(-180deg)' } : null}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={AddRoleCss.boxmodel}>\r\n            <div\r\n              className={AddRoleCss.boxmodel_top}\r\n              onClick={() => handleBox('publisher')}\r\n            >\r\n              <h3>Publishers</h3>\r\n              <img\r\n                alt=\"\"\r\n                src=\"images/up.svg\"\r\n                style={box.publisher ? { transform: 'rotate(-180deg)' } : null}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={AddRoleCss.buttons}>\r\n          <button className={AddRoleCss.addbtn} type=\"submit\">\r\n            Add role\r\n          </button>\r\n          <button\r\n            className={AddRoleCss.cancel}\r\n            type=\"button\"\r\n            onClick={() => toggleState()}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddRole\r\n","import React, { useState } from 'react'\r\n\r\n// components\r\nimport Navbar from '../../components/Navbar/Navbar'\r\n\r\nimport RoleList from '../../components/RoleList/RoleList'\r\nimport AddRole from '../../components/AddRole/AddRole'\r\nimport Footer from '../../components/Footer/Footer'\r\nconst UserManagement = () => {\r\n  const [state, setState] = useState(false)\r\n  const toggleState = () => {\r\n    setState(!state)\r\n  }\r\n  return (\r\n    <>\r\n      <div style={{ minHeight: '100vh' }}>\r\n        <Navbar />\r\n        {state ? (\r\n          <AddRole toggleState={toggleState} />\r\n        ) : (\r\n          <RoleList toggleState={toggleState} />\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserManagement\r\n","import React from 'react'\r\nimport './App.css'\r\n// Router\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\n// Pages\r\nimport ClientWhite from './pages/ClientWhite/ClientWhite'\r\nimport UserManagement from './pages/UserManagement/UserManagement'\r\nimport Roles from './pages/Roles/Roles'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <span> Pages: </span>\r\n        <Link className=\"a\" to=\"/clients\">\r\n          Clients\r\n        </Link>\r\n        <Link className=\"a\" to=\"/users\">\r\n          Users\r\n        </Link>\r\n        <Link className=\"a\" to=\"/roles\">\r\n          Roles\r\n        </Link>\r\n        <Switch>\r\n          <Route exact path=\"/clients\" component={ClientWhite} />\r\n          <Route exact path=\"/users\" component={UserManagement} />\r\n          <Route exact path=\"/roles\" component={Roles} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export const editUser = (oldUser, newUser, index) => {\r\n  return oldUser.map((User, i) => {\r\n    if (i !== index) {\r\n      return User\r\n    }\r\n    return {\r\n      ...newUser,\r\n    }\r\n  })\r\n}\r\nexport const deleteUser = (oldUser, index) => {\r\n  return [...oldUser.slice(0, index), ...oldUser.slice(index + 1)]\r\n}\r\n","import { editUser, deleteUser } from './users.stateHandlers'\r\n\r\nconst initialUserState = {\r\n  users: [\r\n    {\r\n      fname: 'Esther',\r\n      lname: 'Howard',\r\n      email: 'jessica.hansaon@example.com',\r\n      phone: '(505)555-0125',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n    {\r\n      fname: 'Theresa',\r\n      lname: 'Webb',\r\n      email: 'michelle.rivera@example.com',\r\n      phone: '(217) 555-0113',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n    {\r\n      fname: 'Jacob',\r\n      lname: 'Jones',\r\n      email: 'dolores.chambers@example.com',\r\n      phone: '(208) 555-0112',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n  ],\r\n}\r\nexport const userReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_USER': {\r\n      return Object.assign({}, state, {\r\n        users: [...state.users, action.payload],\r\n      })\r\n    }\r\n    case 'EDIT_USER': {\r\n      const newUser = editUser(\r\n        state.users,\r\n        action.payload.newUser,\r\n        action.payload.index\r\n      )\r\n      return { ...state, users: newUser }\r\n    }\r\n    case 'DELETE_USER': {\r\n      const newUser = deleteUser(state.users, action.payload)\r\n      return { ...state, users: newUser }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const editClent = (oldClient, newClient, index) => {\r\n  return oldClient.map((client, i) => {\r\n    if (i !== index) {\r\n      return client\r\n    }\r\n    return {\r\n      ...newClient,\r\n    }\r\n  })\r\n}\r\nexport const deleteClient = (oldClient, index) => {\r\n  return [...oldClient.slice(0, index), ...oldClient.slice(index + 1)]\r\n}\r\n","import { editClent, deleteClient } from './clients.stateHandlers'\r\n\r\nconst initialUserState = {\r\n  clients: [\r\n    {\r\n      fname: 'Esther',\r\n      lname: 'Howard',\r\n      email: 'jessica.hansaon@example.com',\r\n      company: 'Binford Ltd.',\r\n      phone: '(505)555-0125',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n    {\r\n      fname: 'Theresa',\r\n      lname: 'Webb',\r\n      email: 'michelle.rivera@example.com',\r\n      company: 'Biffco Enterprises Ltd.',\r\n      phone: '(217) 555-0113',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n    {\r\n      fname: 'Jacob',\r\n      lname: 'Jones',\r\n      email: 'dolores.chambers@example.com',\r\n      company: 'Acme Co.',\r\n      phone: '(208) 555-0112',\r\n      roles: 'Admin',\r\n      password: '',\r\n    },\r\n  ],\r\n}\r\nexport const clientReducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_CLIENT': {\r\n      return Object.assign({}, state, {\r\n        clients: [...state.clients, action.payload],\r\n      })\r\n    }\r\n    case 'EDIT_CLIENT': {\r\n      const newClient = editClent(\r\n        state.clients,\r\n        action.payload.newClient,\r\n        action.payload.index\r\n      )\r\n      return { ...state, clients: newClient }\r\n    }\r\n    case 'DELETE_CLIENT': {\r\n      const newClient = deleteClient(state.clients, action.payload)\r\n      return { ...state, clients: newClient }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const editRole = (oldRoles, newRole, index) => {\r\n  return oldRoles.map((client, i) => {\r\n    if (i !== index) {\r\n      return client\r\n    }\r\n    return {\r\n      ...newRole,\r\n    }\r\n  })\r\n}\r\nexport const deleteRole = (roles, index) => {\r\n  return [...roles.slice(0, index), ...roles.slice(index + 1)]\r\n}\r\n","import { deleteRole, editRole } from './roles.stateHandlers'\r\nconst initialRoles = {\r\n  roles: [\r\n    {\r\n      roleName: 'Admin',\r\n      roles: {\r\n        accountManager: false,\r\n        analytics: false,\r\n        clients: false,\r\n        compaigns: false,\r\n        createUsers: false,\r\n        deleteUsers: false,\r\n        manageAccounts: true,\r\n        manageAccountsUser: true,\r\n        performance: false,\r\n      },\r\n    },\r\n    {\r\n      roleName: 'User',\r\n      roles: {\r\n        accountManager: false,\r\n        analytics: false,\r\n        clients: false,\r\n        compaigns: true,\r\n        createUsers: false,\r\n        deleteUsers: true,\r\n        manageAccounts: true,\r\n        manageAccountsUser: true,\r\n        performance: false,\r\n      },\r\n    },\r\n    {\r\n      roleName: 'Client',\r\n      roles: {\r\n        accountManager: false,\r\n        analytics: false,\r\n        clients: false,\r\n        compaigns: true,\r\n        createUsers: false,\r\n        deleteUsers: false,\r\n        manageAccounts: true,\r\n        manageAccountsUser: true,\r\n        performance: true,\r\n      },\r\n    },\r\n  ],\r\n}\r\nexport const roleReducer = (state = initialRoles, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ROLE':\r\n      return Object.assign({}, state, {\r\n        roles: [...state.roles, action.payload],\r\n      })\r\n    case 'DELETE_ROLE': {\r\n      const newRoles = deleteRole(state.roles, action.payload)\r\n      return { ...state, roles: newRoles }\r\n    }\r\n    case 'EDIT_ROLE': {\r\n      const newRole = editRole(\r\n        state.roles,\r\n        action.payload.newRole,\r\n        action.payload.index\r\n      )\r\n      console.log(state.roles)\r\n      console.log(newRole)\r\n      return { ...state, roles: newRole }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { userReducer } from './users/users.reducers'\r\nimport { clientReducer } from './clients/clients.reducers'\r\nimport { roleReducer } from './roles/roles.reducers'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n  userReducer,\r\n  clientReducer,\r\n  roleReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore } from 'redux'\nimport rootReducer from './root-reducer'\n\nexport const store = createStore(rootReducer)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddRole_container__14oWT\",\"text\":\"AddRole_text__vZ4Hh\",\"form\":\"AddRole_form__1FYqV\",\"row\":\"AddRole_row__2AB2H\",\"boxmodel\":\"AddRole_boxmodel__1_4Op\",\"boxmodel_top\":\"AddRole_boxmodel_top__ylMg9\",\"boxmodel_body\":\"AddRole_boxmodel_body__edEIv\",\"switchBox\":\"AddRole_switchBox__1Odvn\",\"buttons\":\"AddRole_buttons__v1RDB\",\"addbtn\":\"AddRole_addbtn__3Yavr\",\"cancel\":\"AddRole_cancel__2I1NZ\"};"],"sourceRoot":""}